{"version":3,"sources":["assets/Scripts/bullet.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAoC,0BAAY;IAAhD;QAAA,qEA6DC;QA3DW,oBAAc,GAAY,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtC,mBAAa,GAAG,IAAI,CAAC;QAEtB,iBAAW,GAAG,KAAK,CAAC,CAAC,0DAA0D;;IAuD1F,CAAC;IArDG,qFAAqF;IAC9E,qBAAI,GAAX,UAAY,IAAa,EAAE,cAAuB,EAAE,eAAuB;QACvE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,EAAE,CAAA;QACjB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACzC,CAAC;IAED,mEAAmE;IACnE,sBAAK,GAAL,UAAM,aAAa;QACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,qEAAqE;IACrE,2BAAU,GAAV,UAAW,IAAa,EAAE,eAAuB;QAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,oFAAoF;QAEpH,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,4CAA4C;IAC5C,2BAAU,GAAV;QAAA,iBAcC;QAZG,IAAI,OAAO,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAElD,uDAAuD;QAEvD,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;YACvB,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,mGAAmG;QACnG,IAAI,CAAC,YAAY,CAAC;YACd,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+BAA+B;IAC/B,+BAAc,GAAd,UAAe,OAAO,EAAE,IAAI,EAAE,KAAK;QAAnC,iBAYC;QAXG,IAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAC;YACd,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;YACxB,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAE3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAI,CAAC,YAAY,CAAC;YACd,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,uEAAuE;IACpF,CAAC;IA5DgB,MAAM;QAD1B,OAAO;OACa,MAAM,CA6D1B;IAAD,aAAC;CA7DD,AA6DC,CA7DmC,EAAE,CAAC,SAAS,GA6D/C;kBA7DoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class bullet extends cc.Component {\n\n    private targetPosition: cc.Vec2 = cc.v2(0, 0);\n\n    private bulletManager = null;\n\n    public isTriggered = false; // I add this to make the bullet kill one enemy at a time.\n\n    // when created, the bullet need to be placed at correct position and play animation.\n    public init(node: cc.Node, targetPosition: cc.Vec2, targetDirection: string) {\n        this.setInitPos(node, targetDirection);\n        this.bulletMove()\n        this.targetPosition = targetPosition;\n    }\n\n    // this function is called when the bullet manager calls \"get\" API.\n    reuse(bulletManager) {\n        this.bulletManager = bulletManager;\n\n        this.isTriggered = false;\n    }\n\n    //this function sets the bullet's initial position when it is reused.\n    setInitPos(node: cc.Node, targetDirection: string) {\n        this.node.parent = node.parent; // don't mount under the player, otherwise it will change direction when player move\n        \n        //this.node.setPosition(cc.v2(128, 70));\n        this.node.position = this.node.position.addSelf(node.position);\n    }\n\n    //make the bullet move from current position\n    bulletMove() {\n\n        let moveDir = cc.moveTo(0.2, this.targetPosition);\n\n        // move bullet to 500 far from current position in 0.8s\n\n        let finished = cc.callFunc(() => {\n            this.bulletManager.put(this.node);\n        });\n\n        // after playing animation, the bullet move 0.8s and destroy itself(put back to the bullet manager)\n        this.scheduleOnce(() => {\n            this.node.runAction(cc.sequence(moveDir, finished));\n        });\n    }\n\n    //detect collision with enemies\n    onBeginContact(contact, selt, other) {\n        if(other.tag == 1){\n            contact.disabled = true;\n            return;\n        }\n        this.node.stopAllActions();\n\n        this.unscheduleAllCallbacks();\n\n        this.scheduleOnce(() => {\n            this.bulletManager.put(this.node);\n        }, 0.1); // for better animation effect, I delay 0.1s when bullet hits the enemy\n    }\n}\n"]}