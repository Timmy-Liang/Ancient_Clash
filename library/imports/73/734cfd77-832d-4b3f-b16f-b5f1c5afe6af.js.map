{"version":3,"sources":["assets/Scripts/player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class player extends cc.Component {\n\n    @property(cc.Prefab)\n    private bulletPrefab: cc.Prefab = null;\n\n    private moveDir: string = 'S';\n\n    private speed: number = 250;\n\n    private anim: cc.Animation = null;\n\n    private animateState = null;\n\n    private maxBullet: number = 5;\n\n    private bulletPool: cc.NodePool = null;\n\n    private nextAttackTime: number = 0;\n\n    private nextReloadTime: number = 0;\n\n    private attackCooldown: number = 0.2;\n\n    private reloadCooldown: number = 5;\n    \n    private attacking: boolean = false;\n\n    private enemys: cc.Node = null;\n\n    private enemyCount: number = 0;\n\n    private targetPosition: cc.Vec2 = cc.v2(0, 0);\n\n    private targetDirection: string = '';\n\n    private nextTraceTime: number = 0;\n\n    private traceCooldown: number = 0.5;\n\n\n    onLoad () {\n        this.bulletPool = new cc.NodePool('bullet');\n        this.anim = this.getComponent(cc.Animation);\n        this.enemys = cc.find(\"Canvas/enemy\");\n        this.enemyCount = this.enemys.childrenCount;\n    }\n\n    start() {\n        for(let i: number = 0; i < this.maxBullet; i++) {\n            let bullet = cc.instantiate(this.bulletPrefab);\n            this.bulletPool.put(bullet);\n        }\n\n    }\n\n    playerMoveDir(dir: string) {\n        this.moveDir = dir;\n    }\n\n    playerMove(dt: number) {\n        switch (this.moveDir) {\n            case 'N':\n                this.node.y += this.speed * dt;\n                break;\n            case 'S':\n                this.node.y -= this.speed * dt;\n                break;\n            case 'E':\n                this.node.x += this.speed * dt;\n                break;\n            case 'W':\n                this.node.x -= this.speed * dt;\n                break;\n            case 'NE':\n                this.node.x += this.speed * dt;\n                this.node.y += this.speed * dt;\n                break;\n            case 'NW':\n                this.node.x -= this.speed * dt;\n                this.node.y += this.speed * dt;\n                break;\n            case 'SW':\n                this.node.x -= this.speed * dt;\n                this.node.y -= this.speed * dt;\n                break;\n            case 'SE':\n                this.node.x += this.speed * dt;\n                this.node.y -= this.speed * dt;\n                break;\n\n        }\n    }\n\n    playerWalkAnimation() {\n        if(this.attacking)\n            return; \n            \n        switch (this.moveDir) {\n            case 'N':\n                if(this.animateState == null || this.animateState.name != 'playerWalkN')\n                    this.animateState = this.anim.play('playerWalkN');\n                break;\n            case 'S':\n                if(this.animateState == null || this.animateState.name != 'playerWalkS')\n                    this.animateState = this.anim.play('playerWalkS');\n                break;\n            case 'E':\n                if(this.animateState == null || this.animateState.name != 'playerWalkE')\n                    this.animateState = this.anim.play('playerWalkE');\n                break;\n            case 'W':\n                if(this.animateState == null || this.animateState.name != 'playerWalkW')\n                    this.animateState = this.anim.play('playerWalkW');\n                break;\n            case 'NE':\n                if(this.animateState == null || this.animateState.name != 'playerWalkNE')\n                    this.animateState = this.anim.play('playerWalkNE');\n                break;\n            case 'NW':\n                if(this.animateState == null || this.animateState.name != 'playerWalkNW')\n                    this.animateState = this.anim.play('playerWalkNW');\n                break;\n            case 'SW':\n                if(this.animateState == null || this.animateState.name != 'playerWalkSW')\n                    this.animateState = this.anim.play('playerWalkSW');\n                break;\n            case 'SE':\n                if(this.animateState == null || this.animateState.name != 'playerWalkSE')\n                    this.animateState = this.anim.play('playerWalkSE');\n                break;\n            default:\n                this.anim.stop();\n                break;\n        }\n    }\n\n    playerAttackAnimation() {\n        let angle = calcAngleDegrees(this.targetPosition.x - this.node.x, this.targetPosition.y - this.node.y);\n        if(angle < 157.5 && angle >= 112.5){\n            this.targetDirection = 'NW';\n        }\n        else if(angle < 112.5 && angle >= 67.5) {\n            this.targetDirection = 'N'\n        }\n        else if(angle < 67.5 && angle >= 22.5) {\n            this.targetDirection = 'NE';\n        }\n        else if(angle < 22.5 && angle >= -22.5) {\n            this.targetDirection = 'E';\n        }\n        else if(angle < -22.5 && angle >= -67.5){\n            this.targetDirection = 'SE';\n        }\n        else if(angle < -67.5 && angle >= -112.5){\n            this.targetDirection = 'S';\n        }\n        else if(angle < -112.5 && angle >= -157.5) {\n            this.targetDirection = 'SW';\n        }\n        else{\n            this.targetDirection = 'W';\n        }\n        this.anim.stop();\n        this.attacking = true;\n        this.animateState = this.anim.play('playerAttack' + this.targetDirection);\n        this.anim.on('finished', (e) =>{\n            this.attacking = false;\n        })\n    }\n\n    playerAttack() {\n        let currentTime = cc.director.getTotalTime() / 1000.0;\n        if(currentTime >= this.nextAttackTime){\n            this.nextAttackTime = currentTime + this.attackCooldown;\n            this.createBullet();\n            this.playerAttackAnimation();\n        }\n    }   \n\n    createBullet() {\n        let bullet = null;\n        if (this.bulletPool.size() > 0){\n            bullet = this.bulletPool.get(this.bulletPool);\n        }\n\n        if(bullet != null)\n            bullet.getComponent('bullet').init(this.node, this.targetPosition, this.targetDirection);\n    }\n    \n    traceEnemy() {\n        let currentTime = cc.director.getTotalTime() / 1000.0;\n        if(currentTime >= this.nextTraceTime){\n            this.nextTraceTime = currentTime + this.traceCooldown;\n            let nextTargetDistance = 9007199254740992; // INT_MAX\n            let nextTargetPosition = cc.v2(0, 0);\n            for(let i = 0; i < this.enemyCount; i++){\n                let currentDistance = this.node.position.sub(this.enemys.children[i].position).mag()\n                if(currentDistance < nextTargetDistance) {\n                    nextTargetDistance = currentDistance;\n                    nextTargetPosition = cc.v2(this.enemys.children[i].position.x, this.enemys.children[i].position.y);\n                }\n            }\n            this.targetPosition = nextTargetPosition;\n        }\n    }\n\n    update(dt) {\n        this.playerMove(dt);\n        this.playerWalkAnimation();\n        this.traceEnemy();\n    }\n}\n\n\nfunction calcAngleDegrees(x, y) {\n    return Math.atan2(y, x) * 180 / Math.PI;\n}"]}